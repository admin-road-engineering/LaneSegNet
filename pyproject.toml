[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "lanesegnet"
version = "1.0.0"
description = "Aerial lane marking detection and road infrastructure analysis system"
authors = [
    {name = "LaneSegNet Team", email = "noreply@example.com"},
]
dependencies = [
    "fastapi",
    "uvicorn[standard]",
    "pillow",
    "numpy<2.0",
    "python-multipart",
    "opencv-python-headless",
    "scikit-image",
    "requests",
    "pyyaml",
]
requires-python = ">=3.8"

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0", 
    "pytest-cov>=4.0.0",
    "pytest-xdist>=3.0.0",
    "pytest-mock>=3.10.0",
    "coverage[toml]>=7.0.0",
    "httpx>=0.24.0",
    "factory-boy>=3.2.0",
    "faker>=18.0.0",
]
dev = [
    "black",
    "isort",
    "flake8",
    "mypy",
    "pre-commit",
]
load-test = [
    "locust>=2.0.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-report=html:htmlcov",
    "--cov-report=term-missing",
    "--cov-report=xml:coverage.xml",
    "--cov-fail-under=95",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "api: API endpoint tests",
    "slow: Tests that take a long time to run",
    "requires_gpu: Tests that require GPU/CUDA",
    "requires_model: Tests that require model weights",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::UserWarning:mmcv.*",
    "ignore::UserWarning:mmseg.*",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "cv2.*",
    "mmcv.*", 
    "mmseg.*",
    "PIL.*",
    "numpy.*",
    "scipy.*",
    "skimage.*",
]
ignore_missing_imports = true